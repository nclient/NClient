name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'     
        required: true
      path-number:
        description: 'Path number'     
        required: true
  push:
    branches: [ alpha-release, beta-release, release ]

env:
  VersionPrefix: 0.10.0
  VersionPatch: 5
      
jobs:
  build:
    name: Build with ${{ matrix.target-frameworks }}
    environment: development
    strategy:
      matrix:
        target-frameworks: [net462, net472, net48, netcoreapp3.1, net5.0]
    runs-on: windows-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Build with ${{ matrix.target-frameworks }}
        uses: ./actions/dotnet-build
        with:
          target-framework: ${{ matrix.target-frameworks }}
          solution: 'Tests.slnf'
          
  test-dotnet-core:
    name: Test with ${{ matrix.target-frameworks }} on ${{ matrix.os }}
    environment: development
    needs: build
    strategy:
      matrix:
        os: [windows-latest]
        target-frameworks: [net462, net472, net48]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Test with ${{ matrix.target-frameworks }}
        uses: ./actions/dotnet-framework-test
        with:
          target-framework: ${{ matrix.target-frameworks }}
          solution: 'NClient.sln'
          
  test-dotnet-framework:
    name: Test with ${{ matrix.target-frameworks }} on ${{ matrix.os }}
    environment: development
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        target-frameworks: [netcoreapp3.1, net5.0]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Test with ${{ matrix.target-frameworks }}
        uses: ./actions/dotnet-core-test
        with:
          target-framework: ${{ matrix.target-frameworks }}
          solution: 'NClient.sln'
  
  tmp-release-alpha:
    #if: github.ref == 'refs/heads/alpha-release'
    if: github.ref == 'refs/heads/features/github-environments'
    needs: [ test-dotnet-core, test-dotnet-framework ]
    environment: release-alpha
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Setup latest .NET
      uses: ./actions/dotnet-push
      with:
        version-prefix: ${{ VersionPrefix }}-alpha.${{ VersionPatch }}
      
  tmp-release-alpha-validation:
    #if: github.ref == 'refs/heads/alpha-release'
    if: github.ref == 'refs/heads/features/github-environments'
    needs: release-alpha 
    runs-on: ubuntu-latest
    steps:
    - name: Set version suffix
      run: echo "VersionSuffix=alpha.${{ VersionPatch }}" >> $GITHUB_ENV
    - name: Wait packages verification (5 min)
      uses: jakejarvis/wait-action@master
      with:
        time: '5m'
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Setup latest .NET
      uses: actions/setup-dotnet@v1
    - name: Restore dependencies and build
      run: dotnet build --configuration TestRelease -warnaserror
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration TestRelease
  
  release-alpha:
    if: github.ref == 'refs/heads/alpha-release'
    needs: [ test-dotnet-core, test-dotnet-framework ]
    environment: release-alpha
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Setup latest .NET
      uses: ./actions/dotnet-push
      with:
        version-prefix: ${{ VersionPrefix }}-alpha.${{ VersionPatch }}
      
  release-alpha-validation:
    if: github.ref == 'refs/heads/alpha-release'
    needs: release-alpha 
    runs-on: ubuntu-latest
    steps:
    - name: Set version suffix
      run: echo "VersionSuffix=alpha.${{ VersionPatch }}" >> $GITHUB_ENV
    - name: Wait packages verification (5 min)
      uses: jakejarvis/wait-action@master
      with:
        time: '5m'
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Setup latest .NET
      uses: actions/setup-dotnet@v1
    - name: Restore dependencies and build
      run: dotnet build --configuration TestRelease -warnaserror
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration TestRelease